name: Deploy

on:
  push:
    branches:
      - main

jobs:
  # android:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout Code
  #     uses: actions/checkout@v3

  #   - name: Setup Flutter
  #     uses: subosito/flutter-action@v2
  #     with:
  #       channel: stable
  #       cache: true

  #   - name: Set up key.properties
  #     run: |
  #       echo "keyPassword=${{ secrets.KEY_PASSWORD }}" > android/key.properties
  #       echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
  #       echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
  #       echo "${{ secrets.STORE_FILE_CONTENT }}" | base64 --decode > android/key.jks

  #   - name: Set up local.properties
  #     run: |
  #       echo "flutter.sdk=$FLUTTER_ROOT" > android/local.properties

  #   - name: Set up Play Store Secret
  #     run: |
  #       echo "${{ secrets.PLAY_STORE_SECRET }}" | base64 --decode > android/play_store_secret.json

  #   - name: Setup Fastlane
  #     uses: ruby/setup-ruby@v1
  #     with:
  #       ruby-version: 2.6
  #       rubygems: latest

  #   - name: Build and Deploy
  #     run: |
  #       flutter pub get
  #       make deploy-android
  
  # ios:
  #   runs-on: macos-latest

  #   steps:
  #   - name: Checkout Code
  #     uses: actions/checkout@v3

  #   - name: Setup Flutter
  #     uses: subosito/flutter-action@v2
  #     with:
  #       channel: stable
  #       cache: true

  #   - name: Set up App Store Connect
  #     run: |
  #       echo "${{ secrets.APP_STORE_CONNECT }}" | base64 --decode > ios/app_store_connect.json

  #   - name: Setup Fastlane
  #     uses: ruby/setup-ruby@v1
  #     with:
  #       ruby-version: 2.6
  #       rubygems: latest

  #   - name: Build and Deploy
  #     run: |
  #       flutter pub get
  #       make deploy-ios
  #     env:
  #         MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
  #         MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.GIT_BASIC_AUTHORIZATION }}

  # web:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v3

  #     - name: Setup Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: 'stable'
  #         cache: true

  #     - name: Make Web Build
  #       run: |
  #         flutter pub get
  #         flutter build web

  #     - name: Deploy Web Build
  #       uses: FirebaseExtended/action-hosting-deploy@v0
  #       with:
  #         repoToken: '${{ secrets.GITHUB_TOKEN }}'
  #         firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_CHECKLIST_6A64E }}'
  #         channelId: live
  #         projectId: checklist-6a64e

  tag:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Get Flutter Version
      run: |
        versionName=`cat pubspec.yaml | grep -o 'version:[^:]*' | cut -f2 -d":" | xargs`
        echo "VERSION_NAME=v$versionName" >> $GITHUB_ENV

    - name: Generate Realease Notes
      run: |
        git fetch --prune --unshallow --tags
        from=$(git describe --tags --abbrev=0)
        to=${{ env.VERSION_NAME }}
        echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
        echo "## What's Changed" >> $GITHUB_ENV
        echo $(git log $from..HEAD --pretty=format:"* %s by %an in %h%n") >> $GITHUB_ENV
        echo "\n\n**Full Changelog**: https://github.com/Semy-App/semy_flutter/compare/$from...$to" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Create Tag and Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION_NAME }}
        release_name: ${{ env.VERSION_NAME }}
        body: ${{ env.RELEASE_NOTES }}
        draft: false
        prerelease: false
